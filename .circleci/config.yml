version: 2.1

orbs:
  android: circleci/android@2.5.0

jobs:
  Core-Lint:
    executor:
      name: android/android_docker
      resource-class: medium
      tag: default
    steps:
      - checkout
      - android/restore-gradle-cache:
          cache-prefix: core-v1
      - android/restore-build-cache:
          cache-prefix: core-v1
      - run:
          name: Ktlint
          command: ./gradlew :core:ktlintCheck
      - android/save-gradle-cache:
          cache-prefix: core-v1
      - android/save-build-cache:
          cache-prefix: core-v1

  Core-Test:
    executor:
      name: android/android_docker
      resource-class: medium
      tag: default
    steps:
      - checkout
      - android/restore-gradle-cache:
          cache-prefix: core-v1
      - android/restore-build-cache:
          cache-prefix: core-v1
      - android/run-tests:
          test-command: ./gradlew :core:test
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit
      - android/save-gradle-cache:
          cache-prefix: core-v1
      - android/save-build-cache:
          cache-prefix: core-v1

  Core-Build:
    executor:
      name: android/android_docker
      resource-class: medium
      tag: default
    steps:
      - checkout
      - android/restore-gradle-cache:
          cache-prefix: core-v1
      - android/restore-build-cache:
          cache-prefix: core-v1
      - run:
          name: Assemble Core Library
          command: |
            ./gradlew :core:assembleRelease
            ./gradlew :core:publishToMavenLocal
      - android/save-gradle-cache:
          cache-prefix: core-v1
      - android/save-build-cache:
          cache-prefix: core-v1


  Rx2-Lint:
    executor:
      name: android/android_docker
      resource-class: medium
      tag: default
    steps:
      - checkout
      - android/restore-gradle-cache:
          cache-prefix: rx2-v1
      - android/restore-build-cache:
          cache-prefix: rx2-v1
      - run:
          name: Ktlint
          command: ./gradlew :rx2:ktlintCheck
      - android/save-gradle-cache:
          cache-prefix: rx2-v1
      - android/save-build-cache:
          cache-prefix: rx2-v1

  Rx2-Test:
    executor:
      name: android/android_docker
      resource-class: medium
      tag: default
    steps:
      - checkout
      - android/restore-gradle-cache:
          cache-prefix: rx2-v1
      - android/restore-build-cache:
          cache-prefix: rx2-v1
      - android/run-tests:
          test-command: ./gradlew :rx2:test
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit
      - android/save-gradle-cache:
          cache-prefix: rx2-v1
      - android/save-build-cache:
          cache-prefix: rx2-v1

  Rx2-Build:
    executor:
      name: android/android_docker
      resource-class: medium
      tag: default
    steps:
      - checkout
      - android/restore-gradle-cache:
          cache-prefix: rx2-v1
      - android/restore-build-cache:
          cache-prefix: rx2-v1
      - run:
          name: Assemble Rx2 Library
          command: |
            ./gradlew :rx2:assembleRelease
            ./gradlew :rx2:publishToMavenLocal
      - android/save-gradle-cache:
          cache-prefix: rx2-v1
      - android/save-build-cache:
          cache-prefix: rx2-v1

  Rx3-Lint:
    executor:
      name: android/android_docker
      resource-class: medium
      tag: default
    steps:
      - checkout
      - android/restore-gradle-cache:
          cache-prefix: rx3-v1
      - android/restore-build-cache:
          cache-prefix: rx3-v1
      - run:
          name: Ktlint
          command: ./gradlew :rx3:ktlintCheck
      - android/save-gradle-cache:
          cache-prefix: rx3-v1
      - android/save-build-cache:
          cache-prefix: rx3-v1

  Rx3-Test:
    executor:
      name: android/android_docker
      resource-class: medium
      tag: default
    steps:
      - checkout
      - android/restore-gradle-cache:
          cache-prefix: rx3-v1
      - android/restore-build-cache:
          cache-prefix: rx3-v1
      - android/run-tests:
          test-command: ./gradlew :rx3:test
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit
      - android/save-gradle-cache:
          cache-prefix: rx3-v1
      - android/save-build-cache:
          cache-prefix: rx3-v1

  Rx3-Build:
    executor:
      name: android/android_docker
      resource-class: medium
      tag: default
    steps:
      - checkout
      - android/restore-gradle-cache:
          cache-prefix: rx3-v1
      - android/restore-build-cache:
          cache-prefix: rx3-v1
      - run:
          name: Assemble Rx3 Library
          command: |
            ./gradlew :rx3:assembleRelease
            ./gradlew :rx3:publishToMavenLocal
      - android/save-gradle-cache:
          cache-prefix: rx3-v1
      - android/save-build-cache:
          cache-prefix: rx3-v1

  Coroutines-Lint:
    executor:
      name: android/android_docker
      resource-class: medium
      tag: default
    steps:
      - checkout
      - android/restore-gradle-cache:
          cache-prefix: coroutines-v1
      - android/restore-build-cache:
          cache-prefix: coroutines-v1
      - run:
          name: Ktlint
          command: ./gradlew :coroutines:ktlintCheck
      - android/save-gradle-cache:
          cache-prefix: coroutines-v1
      - android/save-build-cache:
          cache-prefix: coroutines-v1

  Coroutines-Test:
    executor:
      name: android/android_docker
      resource-class: medium
      tag: default
    steps:
      - checkout
      - android/restore-gradle-cache:
          cache-prefix: coroutines-v1
      - android/restore-build-cache:
          cache-prefix: coroutines-v1
      - android/run-tests:
          test-command: ./gradlew :coroutines:test
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit
      - android/save-gradle-cache:
          cache-prefix: coroutines-v1
      - android/save-build-cache:
          cache-prefix: coroutines-v1

  Coroutines-Build:
    executor:
      name: android/android_docker
      resource-class: medium
      tag: default
    steps:
      - checkout
      - android/restore-gradle-cache:
          cache-prefix: coroutines-v1
      - android/restore-build-cache:
          cache-prefix: coroutines-v1
      - run:
          name: Assemble Coroutines Library
          command: |
            ./gradlew :coroutines:assembleRelease
            ./gradlew :coroutines:publishToMavenLocal
      - android/save-gradle-cache:
          cache-prefix: coroutines-v1
      - android/save-build-cache:
          cache-prefix: coroutines-v1

  Livedata-Lint:
    executor:
      name: android/android_docker
      resource-class: medium
      tag: default
    steps:
      - checkout
      - android/restore-gradle-cache:
          cache-prefix: livedata-v1
      - android/restore-build-cache:
          cache-prefix: livedata-v1
      - run:
          name: Ktlint
          command: ./gradlew :livedata:ktlintCheck
      - android/save-gradle-cache:
          cache-prefix: livedata-v1
      - android/save-build-cache:
          cache-prefix: livedata-v1

  Livedata-Test:
    executor:
      name: android/android_docker
      resource-class: medium
      tag: default
    steps:
      - checkout
      - android/restore-gradle-cache:
          cache-prefix: livedata-v1
      - android/restore-build-cache:
          cache-prefix: livedata-v1
      - android/run-tests:
          test-command: ./gradlew :livedata:test
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit
      - android/save-gradle-cache:
          cache-prefix: livedata-v1
      - android/save-build-cache:
          cache-prefix: livedata-v1

  Livedata-Build:
    executor:
      name: android/android_docker
      resource-class: medium
      tag: default
    steps:
      - checkout
      - android/restore-gradle-cache:
          cache-prefix: livedata-v1
      - android/restore-build-cache:
          cache-prefix: livedata-v1
      - run:
          name: Assemble Livedata Library
          command: |
            ./gradlew :livedata:assembleRelease
            ./gradlew :livedata:publishToMavenLocal
      - android/save-gradle-cache:
          cache-prefix: livedata-v1
      - android/save-build-cache:
          cache-prefix: livedata-v1

  Rx-Preferences-Upload:
    executor:
      name: android/android_docker
      resource-class: medium
      tag: default
    steps:
      - checkout
      - android/restore-gradle-cache:
          cache-prefix: core-v1
      - android/restore-build-cache:
          cache-prefix: core-v1
      - android/restore-gradle-cache:
          cache-prefix: rx2-v1
      - android/restore-build-cache:
          cache-prefix: rx2-v1
      - android/restore-gradle-cache:
          cache-prefix: rx3-v1
      - android/restore-build-cache:
          cache-prefix: rx3-v1
      - android/restore-gradle-cache:
          cache-prefix: coroutines-v1
      - android/restore-build-cache:
          cache-prefix: coroutines-v1
      - android/restore-gradle-cache:
          cache-prefix: livedata-v1
      - android/restore-build-cache:
          cache-prefix: livedata-v1
      - run:
          name: Upload RxPreferences Libraries
          command: |
            ./gradlew publishAllPublicationsToMavenCentralRepository --no-parallel --no-configuration-cache --stacktrace

  Publish-Documentation:
    name: android/android_docker
      resource-class: medium
      tag: default
    steps:
      - checkout
      - run: |
          git config user.name github-actions[bot]
          git config user.email github-actions[bot]@users.noreply.github.com
      - run: ./gradlew dokkaHtmlMultiModule
      - run: mv ./build/dokka/htmlMultiModule docs/api
      - run: cat README.md | grep -v '\[8\]' | grep -v '\[9\]' | grep -v '\[10\]' | grep -v '\[11\]' | grep -v '\[12\]' | grep -v '\[13\]' | grep -v '\[14\]' > docs/index.md
      - run: cat CHANGELOG.md > docs/changelog.md
      - run: sudo apt-get install python3
      - run: python -m ensurepip --upgrade
      - run: pip install mkdocs-material
      - run: mkdocs gh-deploy --force

workflows:
  version: 2
  Test-And-Build:
    jobs:
      - Core-Lint
      - Core-Test:
          requires:
            - Core-Lint
      - Core-Build:
          requires:
            - Core-Test
      - Rx2-Lint
      - Rx2-Test:
          requires:
            - Rx2-Lint
      - Rx2-Build:
          requires:
            - Rx2-Test
      - Rx3-Lint
      - Rx3-Test:
          requires:
            - Rx3-Lint
      - Rx3-Build:
          requires:
            - Rx3-Test
      - Coroutines-Lint
      - Coroutines-Test:
          requires:
            - Coroutines-Lint
      - Coroutines-Build:
          requires:
            - Coroutines-Test
      - Livedata-Lint
      - Livedata-Test:
          requires:
            - Livedata-Lint
      - Livedata-Build:
          requires:
            - Livedata-Test
      - Publish-Documentation-Approval:
          type: approval
          requires:
            - Core-Build
            - Rx2-Build
            - Rx3-Build
            - Coroutines-Build
            - Livedata-Build
      - Publish-Documentation:
          requires:
            - Publish-Documentation-Approval
      - Rx-Preferences-Upload-Approval:
          type: approval
          requires:
            - Core-Build
            - Rx2-Build
            - Rx3-Build
            - Coroutines-Build
            - Livedata-Build
          filters:
            branches:
              only:
                - master
      - Rx-Preferences-Upload:
          requires:
            - Rx-Preferences-Upload-Approval
          filters:
            branches:
              only:
                - master
